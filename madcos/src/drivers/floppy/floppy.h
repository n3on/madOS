/**************************************** (c)2008-2009 by MADCrew all rights reserved Marcel S., Dmitrij M.****************************************/#ifndef _FLOPPY_DISC_H_#define _FLOPPY_DISC_H_/***\file floppy.h*\brief Implementierung von Diskettentreiber.(TODO: Implementiere Treiber)**/#include "..\drivers\timer\timer.h"/***\enum FLOPPY_PORTS*\brief Diskettencontroler I/O Ports**/enum FLOPPY_PORTS{	FP_STATUS_REGISTER_A = 0x3F0,	FP_STATUS_REGISTER_B = 0x3F1,	FP_DIGITAL_OUTPUT_REGISTER = 0x3F2,	FP_TAPE_DRIVER_REGISTER    = 0x3F3,	FP_MAIN_STATUS_REGISTER    = 0x3F4,	FP_DATA_RATE_SELECT_REGISTER = 0x3F4,	FP_DATA_FIFO = 0x3F5,	FP_DIGITAL_INPUT_REGISTER = 0x3F7,	FP_CONFIGURATION_CONTROL_REGISTER = 0x3F7};/***\enum FLOPPY_COMMANDS*\brief Diskettencontroller I/O Befehle**/enum FLOPPY_COMMANDS {   FC_READ_TRACK = 2,   FC_SPECIFY = 3,   FC_SENSE_DRIVE_STATUS = 4,   FC_WRITE_DATA = 5,   FC_READ_DATA = 6,   FC_RECALIBRATE = 7,   FC_SENSE_INTERRUPT = 8,   FC_WRITE_DELETED_DATA = 9,   FC_READ_ID = 10,   FC_READ_DELETED_DATA = 12,   FC_FORMAT_TRACK = 13,   FC_SEEK = 15,   FC_VERSION = 16,   FC_SCAN_EQUAL = 17,   FC_PERPENDICULAR_MODE = 18,   FC_CONFIGURE = 19,   FC_VERIFY = 22,   FC_SCAN_LOW_OR_EQUAL = 25,   FC_SCAN_HIGH_OR_EQUAL = 29,};//internet Floppyspeicher um sekturen im Hauptspeicher zu speichern#define floppy_bufferSize 0x4800static const floppy_buffer[floppy_bufferSize];//wurde ein Floppyinterrupt ausgeloest?int floppy_irq;//ist motor an?int floppy_motor_on;/***\brief Initialisiert Diskettencontroller**/void floppy_init();/***\brief Schaltet den Diskettencontroller an**/void floppy_motorOn();/***\brief Schaltet den Diskettencontroller auf**/void floppy_motorOff();/***\brief  Wartet auf Floppy interrupt**/void floppy_waitIrq();/***\brief Setzt Diskettencontroller auf Cylinder 0**/void floppy_calibrate();void floppy_reset();/***\brief Gibt ein Befehl zum Diskettenkontroler**/void floppy_out(char cmd);/***\brief List ein Befehl vom Diskettenkontroler**/unsigned char floppy_read(unsigned short port);/***\brief Setzt den Diskettenkontroler auf bestimmte Zylinder und Kopfposition**/void floppy_set(int head, int cylinder);#endif